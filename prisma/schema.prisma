generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role { 
  ADMIN 
  CUSTOMER
}

model User {
  id String @id @default(uuid())
  name  String
  email String @unique
  password String
  role Role @default(CUSTOMER)
  contactNo String
  address String
  profileImg String

  reviewAndRatings ReviewAndRating[]
  orders Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Category {
  id String @id @default(uuid())
  title String

  books Book[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

model Book {
  id String @id @default(uuid())
  title String
  author String
  price Float
  genre String
  publicationDate String

  categoryId String
  category Category @relation(fields: [categoryId], references: [id])

  reviewAndRatings ReviewAndRating[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("books")
}

model ReviewAndRating {
  id String @id @default(uuid())
  review String
  rating Int

  userId String
  user User @relation(fields: [userId], references: [id])

  bookId String
  book Book @relation(fields: [bookId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("review_and_ratings")
}

enum Status {
  PENDING
  SHIPPED
  DELIVERED
}


model Order {
  id String @id @default(uuid())
  orderedBooks Json[]
  status Status @default(PENDING)

  userId String
  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("orders")
}